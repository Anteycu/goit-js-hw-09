{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,IAyDAC,EAvDA,MACEC,OAAOC,GACLA,EAAEC,iBACF,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAAcC,SAE1CC,EAAYC,OAAON,EAAMO,OACzBC,EAAWF,OAAOL,EAAKM,OACvBE,EAAaH,OAAOJ,EAAOK,OAEjCG,KAAKC,cAAcN,EAAWG,EAAUC,E,CAG1CE,cAAcC,EAAOX,EAAMC,GACzB,IAAIW,EAAeD,EACnB,IAAK,IAAIE,EAAI,EAAGA,GAAKZ,EAAQY,GAAK,EAChCJ,KAAKK,cAAcD,EAAGD,GACnBG,MAAK,EAACC,SAAEA,EAAQjB,MAAEA,MACjBU,KAAKQ,QAAQD,EAAUjB,EAAM,IAE9BmB,OAAM,EAACF,SAAEA,EAAQjB,MAAEA,MAClBU,KAAKU,QAAQH,EAAUjB,EAAM,IAGjCa,GAAgBZ,C,CAIpBc,cAAcE,EAAUjB,GACtB,OAAO,IAAIqB,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAI,C,SAAEL,E,MAAUjB,IAGhBuB,EAAI,C,SAAEN,E,MAAUjB,GAAQ,GAEzBA,EAAM,G,CAIbkB,QAAQD,EAAUjB,GAChBN,EAAAiC,OAAOT,QAAQ,uBAAqBD,QAAiBjB,MAAW,CAC5D4B,cAAY,G,CAIlBR,QAAQH,EAAUjB,GAChBN,EAAAiC,OAAOP,QAAQ,sBAAoBH,QAAejB,MAAW,CAC3D4B,cAAc,G,GClDpB,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAW,IAAIpC,EAErBiC,EAAQI,iBAAiB,SAAUD,EAASnC,OAAOqC,KAAKF","sources":["src/js/promise-plugin.js","src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nclass PromisePlugin {\n  submit(e) {\n    e.preventDefault();\n    const { delay, step, amount } = e.currentTarget.elements;\n\n    const pDelayNum = Number(delay.value);\n    const pStepNum = Number(step.value);\n    const pAmountNum = Number(amount.value);\n\n    this.promiseCaller(pDelayNum, pStepNum, pAmountNum);\n  }\n\n  promiseCaller(delay, step, amount) {\n    let delayCounter = delay;\n    for (let i = 1; i <= amount; i += 1) {\n      this.createPromise(i, delayCounter)\n        .then(({ position, delay }) => {\n          this.success(position, delay);\n        })\n        .catch(({ position, delay }) => {\n          this.failure(position, delay);\n        });\n\n      delayCounter += step;\n    }\n  }\n\n  createPromise(position, delay) {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          // Fulfill\n          res({ position, delay });\n        } else {\n          // Reject\n          rej({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  success(position, delay) {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n      clickToClose: true,\n    });\n  }\n\n  failure(position, delay) {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n      clickToClose: true,\n    });\n  }\n}\n\nexport default PromisePlugin;\n","import PromisePlugin from './promise-plugin';\n\nconst formRef = document.querySelector('.form');\nconst promises = new PromisePlugin();\n\nformRef.addEventListener('submit', promises.submit.bind(promises));\n"],"names":["$iQIUW","parcelRequire","$6d4f2d72361dc6fa$export$2e2bcd8739ae039","submit","e","preventDefault","delay","step","amount","currentTarget","elements","pDelayNum","Number","value","pStepNum","pAmountNum","this","promiseCaller","delay1","delayCounter","i","createPromise","then","position","success","catch","failure","Promise","res","rej","setTimeout","Math","random","Notify","clickToClose","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$promises","addEventListener","bind"],"version":3,"file":"03-promises.fe4547d5.js.map"}