{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAI,C,SAAEH,E,MAAUC,IAGhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,GAEzBA,EAAM,G,CAxCGO,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAuBC,GACrBA,EAAEC,iBACF,MAAMX,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,cAAcC,UAKlD,SAAuBC,EAAOJ,EAAMC,GAClC,IAAII,EAAiBD,EACrB,IAAK,IAAIE,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAChCpB,EAAcoB,EAAGD,GACdE,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAwB,OAAOC,QAAQ,uBAAqBtB,QAAiBC,MAAW,CAC5DsB,cAAY,GACd,IAEHC,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAwB,OAAOI,QAAQ,sBAAoBzB,QAAeC,MAAW,CAC3DsB,cAAc,GACd,IAGNL,GAAkBL,C,CAlBpBa,CAAcC,OAAO1B,EAAM2B,OAAQD,OAAOd,EAAKe,OAAQd,EAAOc,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', submitHandler);\n\nfunction submitHandler(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n\n  promiseCaller(Number(delay.value), Number(step.value), amount.value);\n}\n\nfunction promiseCaller(delay, step, amount) {\n  let counterOfDelay = delay;\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, counterOfDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          clickToClose: true,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          clickToClose: true,\n        });\n      });\n\n    counterOfDelay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        res({ position, delay });\n      } else {\n        // Reject\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","step","amount","currentTarget","elements","delay1","counterOfDelay","i","then","Notify","success","clickToClose","catch","failure","$47d4ff9957288465$var$promiseCaller","Number","value"],"version":3,"file":"03-promises.ba383c62.js.map"}